openapi: 3.0.0

info:
  title: Jobs API

  contact: {}

  version: "1.0"

servers:
  - url: https://jobs-api-node-express.herokuapp.com/api/v1

    variables: {}

paths:
  /auth/register:
    post:
      tags:
        - Auth

      summary: Register

      operationId: Register

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"

            example:
              name: John

              email: john@gmail.com

              password: john123

        required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security: []

  /auth/login:
    post:
      tags:
        - Auth

      summary: Login

      operationId: Login

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"

            example:
              email: john@gmail.com

              password: john123

        required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security: []

  /jobs:
    post:
      tags:
        - Jobs

      summary: Create Job

      operationId: CreateJob

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateJobRequest"

            example:
              company: netflix

              position: back-end developer

        required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

    get:
      tags:
        - Jobs

      summary: Get All Jobs

      operationId: GetAllJobs

      parameters: []

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

  /jobs/{id}:
    get:
      tags:
        - Jobs

      summary: Get Job

      operationId: GetJob

      parameters:
        - name: "id"

          in: "path"

          required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

    delete:
      tags:
        - Jobs

      summary: Delete Job

      operationId: DeleteJob

      parameters:
        - name: "id"

          in: "path"

          required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

    patch:
      tags:
        - Jobs

      summary: Update Job

      operationId: UpdateJob

      parameters:
        - name: "id"

          in: "path"

          required: true

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateJobRequest"

            example:
              company: random

              position: full stack developer

        required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

components:
  schemas:
    RegisterRequest:
      title: RegisterRequest

      required:
        - name

        - email

        - password

      type: object

      properties:
        name:
          type: string

        email:
          type: string

        password:
          type: string

      example:
        name: John

        email: john@gmail.com

        password: john123

    LoginRequest:
      title: LoginRequest

      required:
        - email

        - password

      type: object

      properties:
        email:
          type: string

        password:
          type: string

      example:
        email: john@gmail.com

        password: john123

    CreateJobRequest:
      title: CreateJobRequest

      required:
        - company

        - position

      type: object

      properties:
        company:
          type: string

        position:
          type: string

      example:
        company: netflix

        position: back-end developer

    UpdateJobRequest:
      title: UpdateJobRequest

      required:
        - company

        - position

      type: object

      properties:
        company:
          type: string

        position:
          type: string

      example:
        company: random

        position: full stack developer

    DeleteJobRequest:
      title: DeleteJobRequest

      type: object

  securitySchemes:
    bearer:
      type: http

      scheme: bearer

security: []

tags:
  - name: Auth

    description: ""

  - name: Jobs

    description: ""
